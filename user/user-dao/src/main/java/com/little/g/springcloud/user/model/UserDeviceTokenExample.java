package com.little.g.springcloud.user.model;

import java.util.ArrayList;
import java.util.List;

public class UserDeviceTokenExample {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public UserDeviceTokenExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public UserDeviceTokenExample orderBy(String orderByClause) {
		this.setOrderByClause(orderByClause);
		return this;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public UserDeviceTokenExample orderBy(String... orderByClauses) {
		StringBuffer sb = new StringBuffer();
		for (int i = 0; i < orderByClauses.length; i++) {
			sb.append(orderByClauses[i]);
			if (i < orderByClauses.length - 1) {
				sb.append(" , ");
			}
		}
		this.setOrderByClause(sb.toString());
		return this;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria(this);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public static Criteria newAndCreateCriteria() {
		UserDeviceTokenExample example = new UserDeviceTokenExample();
		return example.createCriteria();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public UserDeviceTokenExample when(boolean condition, IExampleWhen then) {
		if (condition) {
			then.example(this);
		}
		return this;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public UserDeviceTokenExample when(boolean condition, IExampleWhen then,
			IExampleWhen otherwise) {
		if (condition) {
			then.example(this);
		}
		else {
			otherwise.example(this);
		}
		return this;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {

		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2,
				String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException(
						"Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUidIsNull() {
			addCriterion("`uid` is null");
			return (Criteria) this;
		}

		public Criteria andUidIsNotNull() {
			addCriterion("`uid` is not null");
			return (Criteria) this;
		}

		public Criteria andUidEqualTo(Integer value) {
			addCriterion("`uid` =", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("`uid` = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUidNotEqualTo(Integer value) {
			addCriterion("`uid` <>", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("`uid` <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUidGreaterThan(Integer value) {
			addCriterion("`uid` >", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("`uid` > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanOrEqualTo(Integer value) {
			addCriterion("`uid` >=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanOrEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("`uid` >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUidLessThan(Integer value) {
			addCriterion("`uid` <", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("`uid` < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUidLessThanOrEqualTo(Integer value) {
			addCriterion("`uid` <=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThanOrEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("`uid` <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUidIn(List<Integer> values) {
			addCriterion("`uid` in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotIn(List<Integer> values) {
			addCriterion("`uid` not in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidBetween(Integer value1, Integer value2) {
			addCriterion("`uid` between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotBetween(Integer value1, Integer value2) {
			addCriterion("`uid` not between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andDeviceIdIsNull() {
			addCriterion("device_id is null");
			return (Criteria) this;
		}

		public Criteria andDeviceIdIsNotNull() {
			addCriterion("device_id is not null");
			return (Criteria) this;
		}

		public Criteria andDeviceIdEqualTo(String value) {
			addCriterion("device_id =", value, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_id = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceIdNotEqualTo(String value) {
			addCriterion("device_id <>", value, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_id <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceIdGreaterThan(String value) {
			addCriterion("device_id >", value, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_id > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceIdGreaterThanOrEqualTo(String value) {
			addCriterion("device_id >=", value, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdGreaterThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_id >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceIdLessThan(String value) {
			addCriterion("device_id <", value, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_id < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceIdLessThanOrEqualTo(String value) {
			addCriterion("device_id <=", value, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdLessThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_id <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceIdLike(String value) {
			addCriterion("device_id like", value, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdNotLike(String value) {
			addCriterion("device_id not like", value, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdIn(List<String> values) {
			addCriterion("device_id in", values, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdNotIn(List<String> values) {
			addCriterion("device_id not in", values, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdBetween(String value1, String value2) {
			addCriterion("device_id between", value1, value2, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceIdNotBetween(String value1, String value2) {
			addCriterion("device_id not between", value1, value2, "deviceId");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeIsNull() {
			addCriterion("device_type is null");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeIsNotNull() {
			addCriterion("device_type is not null");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeEqualTo(Byte value) {
			addCriterion("device_type =", value, "deviceType");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_type = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceTypeNotEqualTo(Byte value) {
			addCriterion("device_type <>", value, "deviceType");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_type <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceTypeGreaterThan(Byte value) {
			addCriterion("device_type >", value, "deviceType");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_type > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceTypeGreaterThanOrEqualTo(Byte value) {
			addCriterion("device_type >=", value, "deviceType");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeGreaterThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_type >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceTypeLessThan(Byte value) {
			addCriterion("device_type <", value, "deviceType");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_type < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceTypeLessThanOrEqualTo(Byte value) {
			addCriterion("device_type <=", value, "deviceType");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeLessThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("device_type <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andDeviceTypeIn(List<Byte> values) {
			addCriterion("device_type in", values, "deviceType");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeNotIn(List<Byte> values) {
			addCriterion("device_type not in", values, "deviceType");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeBetween(Byte value1, Byte value2) {
			addCriterion("device_type between", value1, value2, "deviceType");
			return (Criteria) this;
		}

		public Criteria andDeviceTypeNotBetween(Byte value1, Byte value2) {
			addCriterion("device_type not between", value1, value2, "deviceType");
			return (Criteria) this;
		}

		public Criteria andOsIsNull() {
			addCriterion("os is null");
			return (Criteria) this;
		}

		public Criteria andOsIsNotNull() {
			addCriterion("os is not null");
			return (Criteria) this;
		}

		public Criteria andOsEqualTo(String value) {
			addCriterion("os =", value, "os");
			return (Criteria) this;
		}

		public Criteria andOsEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("os = ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andOsNotEqualTo(String value) {
			addCriterion("os <>", value, "os");
			return (Criteria) this;
		}

		public Criteria andOsNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("os <> ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andOsGreaterThan(String value) {
			addCriterion("os >", value, "os");
			return (Criteria) this;
		}

		public Criteria andOsGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("os > ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andOsGreaterThanOrEqualTo(String value) {
			addCriterion("os >=", value, "os");
			return (Criteria) this;
		}

		public Criteria andOsGreaterThanOrEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("os >= ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andOsLessThan(String value) {
			addCriterion("os <", value, "os");
			return (Criteria) this;
		}

		public Criteria andOsLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("os < ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andOsLessThanOrEqualTo(String value) {
			addCriterion("os <=", value, "os");
			return (Criteria) this;
		}

		public Criteria andOsLessThanOrEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("os <= ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andOsLike(String value) {
			addCriterion("os like", value, "os");
			return (Criteria) this;
		}

		public Criteria andOsNotLike(String value) {
			addCriterion("os not like", value, "os");
			return (Criteria) this;
		}

		public Criteria andOsIn(List<String> values) {
			addCriterion("os in", values, "os");
			return (Criteria) this;
		}

		public Criteria andOsNotIn(List<String> values) {
			addCriterion("os not in", values, "os");
			return (Criteria) this;
		}

		public Criteria andOsBetween(String value1, String value2) {
			addCriterion("os between", value1, value2, "os");
			return (Criteria) this;
		}

		public Criteria andOsNotBetween(String value1, String value2) {
			addCriterion("os not between", value1, value2, "os");
			return (Criteria) this;
		}

		public Criteria andAccessTokenIsNull() {
			addCriterion("access_token is null");
			return (Criteria) this;
		}

		public Criteria andAccessTokenIsNotNull() {
			addCriterion("access_token is not null");
			return (Criteria) this;
		}

		public Criteria andAccessTokenEqualTo(String value) {
			addCriterion("access_token =", value, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_token = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessTokenNotEqualTo(String value) {
			addCriterion("access_token <>", value, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_token <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessTokenGreaterThan(String value) {
			addCriterion("access_token >", value, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_token > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessTokenGreaterThanOrEqualTo(String value) {
			addCriterion("access_token >=", value, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenGreaterThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_token >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessTokenLessThan(String value) {
			addCriterion("access_token <", value, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_token < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessTokenLessThanOrEqualTo(String value) {
			addCriterion("access_token <=", value, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenLessThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_token <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessTokenLike(String value) {
			addCriterion("access_token like", value, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenNotLike(String value) {
			addCriterion("access_token not like", value, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenIn(List<String> values) {
			addCriterion("access_token in", values, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenNotIn(List<String> values) {
			addCriterion("access_token not in", values, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenBetween(String value1, String value2) {
			addCriterion("access_token between", value1, value2, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessTokenNotBetween(String value1, String value2) {
			addCriterion("access_token not between", value1, value2, "accessToken");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInIsNull() {
			addCriterion("access_expires_in is null");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInIsNotNull() {
			addCriterion("access_expires_in is not null");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInEqualTo(Long value) {
			addCriterion("access_expires_in =", value, "accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_expires_in = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInNotEqualTo(Long value) {
			addCriterion("access_expires_in <>", value, "accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInNotEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_expires_in <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInGreaterThan(Long value) {
			addCriterion("access_expires_in >", value, "accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInGreaterThanColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_expires_in > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInGreaterThanOrEqualTo(Long value) {
			addCriterion("access_expires_in >=", value, "accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInGreaterThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_expires_in >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInLessThan(Long value) {
			addCriterion("access_expires_in <", value, "accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_expires_in < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInLessThanOrEqualTo(Long value) {
			addCriterion("access_expires_in <=", value, "accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInLessThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("access_expires_in <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInIn(List<Long> values) {
			addCriterion("access_expires_in in", values, "accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInNotIn(List<Long> values) {
			addCriterion("access_expires_in not in", values, "accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInBetween(Long value1, Long value2) {
			addCriterion("access_expires_in between", value1, value2, "accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andAccessExpiresInNotBetween(Long value1, Long value2) {
			addCriterion("access_expires_in not between", value1, value2,
					"accessExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenIsNull() {
			addCriterion("refresh_token is null");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenIsNotNull() {
			addCriterion("refresh_token is not null");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenEqualTo(String value) {
			addCriterion("refresh_token =", value, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_token = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshTokenNotEqualTo(String value) {
			addCriterion("refresh_token <>", value, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_token <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshTokenGreaterThan(String value) {
			addCriterion("refresh_token >", value, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_token > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshTokenGreaterThanOrEqualTo(String value) {
			addCriterion("refresh_token >=", value, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenGreaterThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_token >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshTokenLessThan(String value) {
			addCriterion("refresh_token <", value, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_token < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshTokenLessThanOrEqualTo(String value) {
			addCriterion("refresh_token <=", value, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenLessThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_token <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshTokenLike(String value) {
			addCriterion("refresh_token like", value, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenNotLike(String value) {
			addCriterion("refresh_token not like", value, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenIn(List<String> values) {
			addCriterion("refresh_token in", values, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenNotIn(List<String> values) {
			addCriterion("refresh_token not in", values, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenBetween(String value1, String value2) {
			addCriterion("refresh_token between", value1, value2, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshTokenNotBetween(String value1, String value2) {
			addCriterion("refresh_token not between", value1, value2, "refreshToken");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInIsNull() {
			addCriterion("refresh_expires_in is null");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInIsNotNull() {
			addCriterion("refresh_expires_in is not null");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInEqualTo(Long value) {
			addCriterion("refresh_expires_in =", value, "refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_expires_in = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInNotEqualTo(Long value) {
			addCriterion("refresh_expires_in <>", value, "refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInNotEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_expires_in <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInGreaterThan(Long value) {
			addCriterion("refresh_expires_in >", value, "refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInGreaterThanColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_expires_in > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInGreaterThanOrEqualTo(Long value) {
			addCriterion("refresh_expires_in >=", value, "refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInGreaterThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_expires_in >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInLessThan(Long value) {
			addCriterion("refresh_expires_in <", value, "refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_expires_in < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInLessThanOrEqualTo(Long value) {
			addCriterion("refresh_expires_in <=", value, "refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInLessThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("refresh_expires_in <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInIn(List<Long> values) {
			addCriterion("refresh_expires_in in", values, "refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInNotIn(List<Long> values) {
			addCriterion("refresh_expires_in not in", values, "refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInBetween(Long value1, Long value2) {
			addCriterion("refresh_expires_in between", value1, value2,
					"refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andRefreshExpiresInNotBetween(Long value1, Long value2) {
			addCriterion("refresh_expires_in not between", value1, value2,
					"refreshExpiresIn");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Long value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("create_time = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Long value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("create_time <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Long value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("create_time > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("create_time >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Long value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("create_time < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Long value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("create_time <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Long> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Long> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Long value1, Long value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Long value1, Long value2) {
			addCriterion("create_time not between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeEqualTo(Long value) {
			addCriterion("update_time =", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("update_time = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotEqualTo(Long value) {
			addCriterion("update_time <>", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("update_time <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThan(Long value) {
			addCriterion("update_time >", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("update_time > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("update_time >=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("update_time >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThan(Long value) {
			addCriterion("update_time <", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("update_time < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Long value) {
			addCriterion("update_time <=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThanOrEqualToColumn(
				UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("update_time <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIn(List<Long> values) {
			addCriterion("update_time in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotIn(List<Long> values) {
			addCriterion("update_time not in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeBetween(Long value1, Long value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotBetween(Long value1, Long value2) {
			addCriterion("update_time not between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andPassIsNull() {
			addCriterion("pass is null");
			return (Criteria) this;
		}

		public Criteria andPassIsNotNull() {
			addCriterion("pass is not null");
			return (Criteria) this;
		}

		public Criteria andPassEqualTo(String value) {
			addCriterion("pass =", value, "pass");
			return (Criteria) this;
		}

		public Criteria andPassEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("pass = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andPassNotEqualTo(String value) {
			addCriterion("pass <>", value, "pass");
			return (Criteria) this;
		}

		public Criteria andPassNotEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("pass <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andPassGreaterThan(String value) {
			addCriterion("pass >", value, "pass");
			return (Criteria) this;
		}

		public Criteria andPassGreaterThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("pass > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andPassGreaterThanOrEqualTo(String value) {
			addCriterion("pass >=", value, "pass");
			return (Criteria) this;
		}

		public Criteria andPassGreaterThanOrEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("pass >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andPassLessThan(String value) {
			addCriterion("pass <", value, "pass");
			return (Criteria) this;
		}

		public Criteria andPassLessThanColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("pass < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andPassLessThanOrEqualTo(String value) {
			addCriterion("pass <=", value, "pass");
			return (Criteria) this;
		}

		public Criteria andPassLessThanOrEqualToColumn(UserDeviceToken.Column column) {
			addCriterion(new StringBuilder("pass <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andPassLike(String value) {
			addCriterion("pass like", value, "pass");
			return (Criteria) this;
		}

		public Criteria andPassNotLike(String value) {
			addCriterion("pass not like", value, "pass");
			return (Criteria) this;
		}

		public Criteria andPassIn(List<String> values) {
			addCriterion("pass in", values, "pass");
			return (Criteria) this;
		}

		public Criteria andPassNotIn(List<String> values) {
			addCriterion("pass not in", values, "pass");
			return (Criteria) this;
		}

		public Criteria andPassBetween(String value1, String value2) {
			addCriterion("pass between", value1, value2, "pass");
			return (Criteria) this;
		}

		public Criteria andPassNotBetween(String value1, String value2) {
			addCriterion("pass not between", value1, value2, "pass");
			return (Criteria) this;
		}

	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated do_not_delete_during_merge
	 */
	public static class Criteria extends GeneratedCriteria {

		/**
		 * This field was generated by MyBatis Generator. This field corresponds to the
		 * database table user_device_token
		 *
		 * @mbg.generated
		 */
		private UserDeviceTokenExample example;

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table user_device_token
		 *
		 * @mbg.generated
		 */
		protected Criteria(UserDeviceTokenExample example) {
			super();
			this.example = example;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table user_device_token
		 *
		 * @mbg.generated
		 */
		public UserDeviceTokenExample example() {
			return this.example;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table user_device_token
		 *
		 * @mbg.generated
		 */
		@Deprecated
		public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
			if (ifAdd) {
				add.add(this);
			}
			return this;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table user_device_token
		 *
		 * @mbg.generated
		 */
		public Criteria when(boolean condition, ICriteriaWhen then) {
			if (condition) {
				then.criteria(this);
			}
			return this;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table user_device_token
		 *
		 * @mbg.generated
		 */
		public Criteria when(boolean condition, ICriteriaWhen then,
				ICriteriaWhen otherwise) {
			if (condition) {
				then.criteria(this);
			}
			else {
				otherwise.criteria(this);
			}
			return this;
		}

		@Deprecated
		public interface ICriteriaAdd {

			/**
			 * This method was generated by MyBatis Generator. This method corresponds to
			 * the database table user_device_token
			 *
			 * @mbg.generated
			 */
			Criteria add(Criteria add);

		}

	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table user_device_token
	 *
	 * @mbg.generated
	 */
	public static class Criterion {

		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			}
			else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}

	}

	public interface ICriteriaWhen {

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table user_device_token
		 *
		 * @mbg.generated
		 */
		void criteria(Criteria criteria);

	}

	public interface IExampleWhen {

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table user_device_token
		 *
		 * @mbg.generated
		 */
		void example(com.little.g.springcloud.user.model.UserDeviceTokenExample example);

	}

}
