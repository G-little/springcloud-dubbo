<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.little.g.springcloud.user.mapper.OAuthUserMapper">
  <resultMap id="BaseResultMap" type="com.little.g.springcloud.user.model.OAuthUser">
    <id column="oauth_type" jdbcType="VARCHAR" property="oauthType" />
    <id column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="expires_in" jdbcType="INTEGER" property="expiresIn" />
    <result column="refresh_token" jdbcType="VARCHAR" property="refreshToken" />
    <result column="re_expires_in" jdbcType="INTEGER" property="reExpiresIn" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="unionid" jdbcType="VARCHAR" property="unionid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oauth_type, openid, `uid`, access_token, expires_in, refresh_token, re_expires_in,
    `name`, avatar, gender, update_time, unionid
  </sql>
  <select id="selectByExample" parameterType="com.little.g.springcloud.user.model.OAuthUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.little.g.springcloud.user.model.OAuthUserKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oauth_user
    where oauth_type = #{oauthType,jdbcType=VARCHAR}
      and openid = #{openid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.little.g.springcloud.user.model.OAuthUserKey">
    delete from oauth_user
    where oauth_type = #{oauthType,jdbcType=VARCHAR}
      and openid = #{openid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.little.g.springcloud.user.model.OAuthUserExample">
    delete from oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.little.g.springcloud.user.model.OAuthUser">
    insert into oauth_user (oauth_type, openid, `uid`,
      access_token, expires_in, refresh_token,
      re_expires_in, `name`, avatar,
      gender, update_time, unionid
      )
    values (#{oauthType,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{uid,jdbcType=BIGINT},
      #{accessToken,jdbcType=VARCHAR}, #{expiresIn,jdbcType=INTEGER}, #{refreshToken,jdbcType=VARCHAR},
      #{reExpiresIn,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
      #{gender,jdbcType=TINYINT}, #{updateTime,jdbcType=BIGINT}, #{unionid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.little.g.springcloud.user.model.OAuthUser">
    insert into oauth_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oauthType != null">
        oauth_type,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="expiresIn != null">
        expires_in,
      </if>
      <if test="refreshToken != null">
        refresh_token,
      </if>
      <if test="reExpiresIn != null">
        re_expires_in,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oauthType != null">
        #{oauthType,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="expiresIn != null">
        #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="refreshToken != null">
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="reExpiresIn != null">
        #{reExpiresIn,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.little.g.springcloud.user.model.OAuthUserExample" resultType="java.lang.Long">
    select count(*) from oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oauth_user
    <set>
      <if test="record.oauthType != null">
        oauth_type = #{record.oauthType,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.accessToken != null">
        access_token = #{record.accessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.expiresIn != null">
        expires_in = #{record.expiresIn,jdbcType=INTEGER},
      </if>
      <if test="record.refreshToken != null">
        refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="record.reExpiresIn != null">
        re_expires_in = #{record.reExpiresIn,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.unionid != null">
        unionid = #{record.unionid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oauth_user
    set oauth_type = #{record.oauthType,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      `uid` = #{record.uid,jdbcType=BIGINT},
      access_token = #{record.accessToken,jdbcType=VARCHAR},
      expires_in = #{record.expiresIn,jdbcType=INTEGER},
      refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      re_expires_in = #{record.reExpiresIn,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      unionid = #{record.unionid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.little.g.springcloud.user.model.OAuthUser">
    update oauth_user
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=BIGINT},
      </if>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="expiresIn != null">
        expires_in = #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="refreshToken != null">
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="reExpiresIn != null">
        re_expires_in = #{reExpiresIn,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
    </set>
    where oauth_type = #{oauthType,jdbcType=VARCHAR}
      and openid = #{openid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.little.g.springcloud.user.model.OAuthUser">
    update oauth_user
    set `uid` = #{uid,jdbcType=BIGINT},
      access_token = #{accessToken,jdbcType=VARCHAR},
      expires_in = #{expiresIn,jdbcType=INTEGER},
      refresh_token = #{refreshToken,jdbcType=VARCHAR},
      re_expires_in = #{reExpiresIn,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      unionid = #{unionid,jdbcType=VARCHAR}
    where oauth_type = #{oauthType,jdbcType=VARCHAR}
      and openid = #{openid,jdbcType=VARCHAR}
  </update>
</mapper>
