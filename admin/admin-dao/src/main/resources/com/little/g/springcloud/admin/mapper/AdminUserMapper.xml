<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.little.g.springcloud.admin.mapper.AdminUserMapper">
  <resultMap id="BaseResultMap" type="com.little.g.springcloud.admin.model.AdminUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="birthday" jdbcType="BIGINT" property="birthday" />
    <result column="wx_num" jdbcType="VARCHAR" property="wxNum" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="store" jdbcType="INTEGER" property="store" />
    <result column="contact_name" jdbcType="VARCHAR" property="contactName" />
    <result column="contact_mobile" jdbcType="VARCHAR" property="contactMobile" />
    <result column="relationship" jdbcType="TINYINT" property="relationship" />
    <result column="id_card_img1" jdbcType="VARCHAR" property="idCardImg1" />
    <result column="id_card_img2" jdbcType="VARCHAR" property="idCardImg2" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="belong_to" jdbcType="TINYINT" property="belongTo" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="privilege" jdbcType="VARCHAR" property="privilege" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, real_name, gender, card_id, birthday, wx_num, mobile, store, contact_name, contact_mobile, 
    relationship, id_card_img1, id_card_img2, `password`, belong_to, `status`, privilege, 
    `type`, create_time, update_time, role_id
  </sql>
  <select id="selectByExample" parameterType="com.little.g.springcloud.admin.model.AdminUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.little.g.springcloud.admin.model.AdminUserExample">
    delete from admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.little.g.springcloud.admin.model.AdminUser" useGeneratedKeys="true">
    insert into admin_user (real_name, gender, card_id, 
      birthday, wx_num, mobile, 
      store, contact_name, contact_mobile, 
      relationship, id_card_img1, id_card_img2, 
      `password`, belong_to, `status`, 
      privilege, `type`, create_time, 
      update_time, role_id)
    values (#{realName,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, #{cardId,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=BIGINT}, #{wxNum,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{store,jdbcType=INTEGER}, #{contactName,jdbcType=VARCHAR}, #{contactMobile,jdbcType=VARCHAR}, 
      #{relationship,jdbcType=TINYINT}, #{idCardImg1,jdbcType=VARCHAR}, #{idCardImg2,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{belongTo,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{privilege,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT}, #{roleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.little.g.springcloud.admin.model.AdminUser" useGeneratedKeys="true">
    insert into admin_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="realName != null">
        real_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="wxNum != null">
        wx_num,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="store != null">
        store,
      </if>
      <if test="contactName != null">
        contact_name,
      </if>
      <if test="contactMobile != null">
        contact_mobile,
      </if>
      <if test="relationship != null">
        relationship,
      </if>
      <if test="idCardImg1 != null">
        id_card_img1,
      </if>
      <if test="idCardImg2 != null">
        id_card_img2,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="belongTo != null">
        belong_to,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="privilege != null">
        privilege,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=BIGINT},
      </if>
      <if test="wxNum != null">
        #{wxNum,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="store != null">
        #{store,jdbcType=INTEGER},
      </if>
      <if test="contactName != null">
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactMobile != null">
        #{contactMobile,jdbcType=VARCHAR},
      </if>
      <if test="relationship != null">
        #{relationship,jdbcType=TINYINT},
      </if>
      <if test="idCardImg1 != null">
        #{idCardImg1,jdbcType=VARCHAR},
      </if>
      <if test="idCardImg2 != null">
        #{idCardImg2,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="belongTo != null">
        #{belongTo,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="privilege != null">
        #{privilege,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.little.g.springcloud.admin.model.AdminUserExample" resultType="java.lang.Long">
    select count(*) from admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.cardId != null">
        card_id = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=BIGINT},
      </if>
      <if test="record.wxNum != null">
        wx_num = #{record.wxNum,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.store != null">
        store = #{record.store,jdbcType=INTEGER},
      </if>
      <if test="record.contactName != null">
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactMobile != null">
        contact_mobile = #{record.contactMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.relationship != null">
        relationship = #{record.relationship,jdbcType=TINYINT},
      </if>
      <if test="record.idCardImg1 != null">
        id_card_img1 = #{record.idCardImg1,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardImg2 != null">
        id_card_img2 = #{record.idCardImg2,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.belongTo != null">
        belong_to = #{record.belongTo,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.privilege != null">
        privilege = #{record.privilege,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin_user
    set id = #{record.id,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      card_id = #{record.cardId,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=BIGINT},
      wx_num = #{record.wxNum,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      store = #{record.store,jdbcType=INTEGER},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_mobile = #{record.contactMobile,jdbcType=VARCHAR},
      relationship = #{record.relationship,jdbcType=TINYINT},
      id_card_img1 = #{record.idCardImg1,jdbcType=VARCHAR},
      id_card_img2 = #{record.idCardImg2,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      belong_to = #{record.belongTo,jdbcType=TINYINT},
      `status` = #{record.status,jdbcType=TINYINT},
      privilege = #{record.privilege,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.little.g.springcloud.admin.model.AdminUser">
    update admin_user
    <set>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=BIGINT},
      </if>
      <if test="wxNum != null">
        wx_num = #{wxNum,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="store != null">
        store = #{store,jdbcType=INTEGER},
      </if>
      <if test="contactName != null">
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactMobile != null">
        contact_mobile = #{contactMobile,jdbcType=VARCHAR},
      </if>
      <if test="relationship != null">
        relationship = #{relationship,jdbcType=TINYINT},
      </if>
      <if test="idCardImg1 != null">
        id_card_img1 = #{idCardImg1,jdbcType=VARCHAR},
      </if>
      <if test="idCardImg2 != null">
        id_card_img2 = #{idCardImg2,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="belongTo != null">
        belong_to = #{belongTo,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="privilege != null">
        privilege = #{privilege,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.little.g.springcloud.admin.model.AdminUser">
    update admin_user
    set real_name = #{realName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      card_id = #{cardId,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=BIGINT},
      wx_num = #{wxNum,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      store = #{store,jdbcType=INTEGER},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_mobile = #{contactMobile,jdbcType=VARCHAR},
      relationship = #{relationship,jdbcType=TINYINT},
      id_card_img1 = #{idCardImg1,jdbcType=VARCHAR},
      id_card_img2 = #{idCardImg2,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      belong_to = #{belongTo,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      privilege = #{privilege,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.little.g.springcloud.admin.model.AdminUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>