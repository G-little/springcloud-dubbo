package com.little.g.springcloud.pay.model;

import java.util.ArrayList;
import java.util.Arrays;

public class Preorder extends PreorderKey {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.attach
	 *
	 * @mbg.generated
	 */
	private String attach;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.out_trade_no
	 *
	 * @mbg.generated
	 */
	private String outTradeNo;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.total_fee
	 *
	 * @mbg.generated
	 */
	private Long totalFee;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.account_id
	 *
	 * @mbg.generated
	 */
	private Integer accountId;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.opposit_account
	 *
	 * @mbg.generated
	 */
	private Integer oppositAccount;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.trade_type
	 *
	 * @mbg.generated
	 */
	private String tradeType;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.btype
	 *
	 * @mbg.generated
	 */
	private Byte btype;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.status
	 *
	 * @mbg.generated
	 */
	private Byte status;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.notify_url
	 *
	 * @mbg.generated
	 */
	private String notifyUrl;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.subject
	 *
	 * @mbg.generated
	 */
	private String subject;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.pay_type
	 *
	 * @mbg.generated
	 */
	private String payType;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.create_time
	 *
	 * @mbg.generated
	 */
	private Long createTime;

	/**
	 *
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database column preorder.update_time
	 *
	 * @mbg.generated
	 */
	private Long updateTime;

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.attach
	 * @return the value of preorder.attach
	 *
	 * @mbg.generated
	 */
	public String getAttach() {
		return attach;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.attach
	 * @param attach the value for preorder.attach
	 *
	 * @mbg.generated
	 */
	public void setAttach(String attach) {
		this.attach = attach == null ? null : attach.trim();
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.out_trade_no
	 * @return the value of preorder.out_trade_no
	 *
	 * @mbg.generated
	 */
	public String getOutTradeNo() {
		return outTradeNo;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.out_trade_no
	 * @param outTradeNo the value for preorder.out_trade_no
	 *
	 * @mbg.generated
	 */
	public void setOutTradeNo(String outTradeNo) {
		this.outTradeNo = outTradeNo == null ? null : outTradeNo.trim();
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.total_fee
	 * @return the value of preorder.total_fee
	 *
	 * @mbg.generated
	 */
	public Long getTotalFee() {
		return totalFee;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.total_fee
	 * @param totalFee the value for preorder.total_fee
	 *
	 * @mbg.generated
	 */
	public void setTotalFee(Long totalFee) {
		this.totalFee = totalFee;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.account_id
	 * @return the value of preorder.account_id
	 * @mbg.generated
	 */
	public Integer getAccountId() {
		return accountId;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.account_id
	 * @param accountId the value for preorder.account_id
	 *
	 * @mbg.generated
	 */
	public void setAccountId(Integer accountId) {
		this.accountId = accountId;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.opposit_account
	 * @return the value of preorder.opposit_account
	 *
	 * @mbg.generated
	 */
	public Integer getOppositAccount() {
		return oppositAccount;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.opposit_account
	 * @param oppositAccount the value for preorder.opposit_account
	 * @mbg.generated
	 */
	public void setOppositAccount(Integer oppositAccount) {
		this.oppositAccount = oppositAccount;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.trade_type
	 * @return the value of preorder.trade_type
	 *
	 * @mbg.generated
	 */
	public String getTradeType() {
		return tradeType;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.trade_type
	 * @param tradeType the value for preorder.trade_type
	 *
	 * @mbg.generated
	 */
	public void setTradeType(String tradeType) {
		this.tradeType = tradeType == null ? null : tradeType.trim();
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.btype
	 * @return the value of preorder.btype
	 *
	 * @mbg.generated
	 */
	public Byte getBtype() {
		return btype;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.btype
	 * @param btype the value for preorder.btype
	 *
	 * @mbg.generated
	 */
	public void setBtype(Byte btype) {
		this.btype = btype;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.status
	 * @return the value of preorder.status
	 *
	 * @mbg.generated
	 */
	public Byte getStatus() {
		return status;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.status
	 * @param status the value for preorder.status
	 *
	 * @mbg.generated
	 */
	public void setStatus(Byte status) {
		this.status = status;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.notify_url
	 * @return the value of preorder.notify_url
	 *
	 * @mbg.generated
	 */
	public String getNotifyUrl() {
		return notifyUrl;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.notify_url
	 * @param notifyUrl the value for preorder.notify_url
	 *
	 * @mbg.generated
	 */
	public void setNotifyUrl(String notifyUrl) {
		this.notifyUrl = notifyUrl == null ? null : notifyUrl.trim();
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.subject
	 * @return the value of preorder.subject
	 *
	 * @mbg.generated
	 */
	public String getSubject() {
		return subject;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.subject
	 * @param subject the value for preorder.subject
	 *
	 * @mbg.generated
	 */
	public void setSubject(String subject) {
		this.subject = subject == null ? null : subject.trim();
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.pay_type
	 * @return the value of preorder.pay_type
	 *
	 * @mbg.generated
	 */
	public String getPayType() {
		return payType;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.pay_type
	 * @param payType the value for preorder.pay_type
	 *
	 * @mbg.generated
	 */
	public void setPayType(String payType) {
		this.payType = payType == null ? null : payType.trim();
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.create_time
	 * @return the value of preorder.create_time
	 *
	 * @mbg.generated
	 */
	public Long getCreateTime() {
		return createTime;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.create_time
	 * @param createTime the value for preorder.create_time
	 *
	 * @mbg.generated
	 */
	public void setCreateTime(Long createTime) {
		this.createTime = createTime;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of
	 * the database column preorder.update_time
	 * @return the value of preorder.update_time
	 *
	 * @mbg.generated
	 */
	public Long getUpdateTime() {
		return updateTime;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the
	 * database column preorder.update_time
	 * @param updateTime the value for preorder.update_time
	 *
	 * @mbg.generated
	 */
	public void setUpdateTime(Long updateTime) {
		this.updateTime = updateTime;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table preorder
	 *
	 * @mbg.generated
	 */
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(getClass().getSimpleName());
		sb.append(" [");
		sb.append("Hash = ").append(hashCode());
		sb.append(", attach=").append(attach);
		sb.append(", outTradeNo=").append(outTradeNo);
		sb.append(", totalFee=").append(totalFee);
		sb.append(", accountId=").append(accountId);
		sb.append(", oppositAccount=").append(oppositAccount);
		sb.append(", tradeType=").append(tradeType);
		sb.append(", btype=").append(btype);
		sb.append(", status=").append(status);
		sb.append(", notifyUrl=").append(notifyUrl);
		sb.append(", subject=").append(subject);
		sb.append(", payType=").append(payType);
		sb.append(", createTime=").append(createTime);
		sb.append(", updateTime=").append(updateTime);
		sb.append("]");
		return sb.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table preorder
	 *
	 * @mbg.generated
	 */
	@Override
	public boolean equals(Object that) {
		if (this == that) {
			return true;
		}
		if (that == null) {
			return false;
		}
		if (getClass() != that.getClass()) {
			return false;
		}
		Preorder other = (Preorder) that;
		return (this.getMchId() == null ? other.getMchId() == null
				: this.getMchId().equals(other.getMchId()))
				&& (this.getPreOrderNo() == null ? other.getPreOrderNo() == null
						: this.getPreOrderNo().equals(other.getPreOrderNo()))
				&& (this.getAttach() == null ? other.getAttach() == null
						: this.getAttach().equals(other.getAttach()))
				&& (this.getOutTradeNo() == null ? other.getOutTradeNo() == null
						: this.getOutTradeNo().equals(other.getOutTradeNo()))
				&& (this.getTotalFee() == null ? other.getTotalFee() == null
						: this.getTotalFee().equals(other.getTotalFee()))
				&& (this.getAccountId() == null ? other.getAccountId() == null
						: this.getAccountId().equals(other.getAccountId()))
				&& (this.getOppositAccount() == null ? other.getOppositAccount() == null
						: this.getOppositAccount().equals(other.getOppositAccount()))
				&& (this.getTradeType() == null ? other.getTradeType() == null
						: this.getTradeType().equals(other.getTradeType()))
				&& (this.getBtype() == null ? other.getBtype() == null
						: this.getBtype().equals(other.getBtype()))
				&& (this.getStatus() == null ? other.getStatus() == null
						: this.getStatus().equals(other.getStatus()))
				&& (this.getNotifyUrl() == null ? other.getNotifyUrl() == null
						: this.getNotifyUrl().equals(other.getNotifyUrl()))
				&& (this.getSubject() == null ? other.getSubject() == null
						: this.getSubject().equals(other.getSubject()))
				&& (this.getPayType() == null ? other.getPayType() == null
						: this.getPayType().equals(other.getPayType()))
				&& (this.getCreateTime() == null ? other.getCreateTime() == null
						: this.getCreateTime().equals(other.getCreateTime()))
				&& (this.getUpdateTime() == null ? other.getUpdateTime() == null
						: this.getUpdateTime().equals(other.getUpdateTime()));
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table preorder
	 *
	 * @mbg.generated
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getMchId() == null) ? 0 : getMchId().hashCode());
		result = prime * result
				+ ((getPreOrderNo() == null) ? 0 : getPreOrderNo().hashCode());
		result = prime * result + ((getAttach() == null) ? 0 : getAttach().hashCode());
		result = prime * result
				+ ((getOutTradeNo() == null) ? 0 : getOutTradeNo().hashCode());
		result = prime * result
				+ ((getTotalFee() == null) ? 0 : getTotalFee().hashCode());
		result = prime * result
				+ ((getAccountId() == null) ? 0 : getAccountId().hashCode());
		result = prime * result
				+ ((getOppositAccount() == null) ? 0 : getOppositAccount().hashCode());
		result = prime * result
				+ ((getTradeType() == null) ? 0 : getTradeType().hashCode());
		result = prime * result + ((getBtype() == null) ? 0 : getBtype().hashCode());
		result = prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());
		result = prime * result
				+ ((getNotifyUrl() == null) ? 0 : getNotifyUrl().hashCode());
		result = prime * result + ((getSubject() == null) ? 0 : getSubject().hashCode());
		result = prime * result + ((getPayType() == null) ? 0 : getPayType().hashCode());
		result = prime * result
				+ ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
		result = prime * result
				+ ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
		return result;
	}

	/**
	 * This enum was generated by MyBatis Generator. This enum corresponds to the database
	 * table preorder
	 *
	 * @mbg.generated
	 */
	public enum Column {

		mchId("mch_id", "mchId", "VARCHAR", false), preOrderNo("pre_order_no",
				"preOrderNo", "VARCHAR",
				false), attach("attach", "attach", "VARCHAR", false), outTradeNo(
						"out_trade_no", "outTradeNo", "VARCHAR",
						false), totalFee("total_fee", "totalFee", "BIGINT",
								false), accountId("account_id", "accountId", "INTEGER",
										false), oppositAccount("opposit_account",
												"oppositAccount", "INTEGER",
												false), tradeType("trade_type",
														"tradeType", "VARCHAR",
														false), btype("btype", "btype",
																"TINYINT",
																false), status("status",
																		"status",
																		"TINYINT",
																		true), notifyUrl(
																				"notify_url",
																				"notifyUrl",
																				"VARCHAR",
																				false), subject(
																						"subject",
																						"subject",
																						"VARCHAR",
																						false), payType(
																								"pay_type",
																								"payType",
																								"VARCHAR",
																								false), createTime(
																										"create_time",
																										"createTime",
																										"BIGINT",
																										false), updateTime(
																												"update_time",
																												"updateTime",
																												"BIGINT",
																												false);

		/**
		 * This field was generated by MyBatis Generator. This field corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		private static final String BEGINNING_DELIMITER = "`";

		/**
		 * This field was generated by MyBatis Generator. This field corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		private static final String ENDING_DELIMITER = "`";

		/**
		 * This field was generated by MyBatis Generator. This field corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		private final String column;

		/**
		 * This field was generated by MyBatis Generator. This field corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		private final boolean isColumnNameDelimited;

		/**
		 * This field was generated by MyBatis Generator. This field corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		private final String javaProperty;

		/**
		 * This field was generated by MyBatis Generator. This field corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		private final String jdbcType;

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public String value() {
			return this.column;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public String getValue() {
			return this.column;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public String getJavaProperty() {
			return this.javaProperty;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public String getJdbcType() {
			return this.jdbcType;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		Column(String column, String javaProperty, String jdbcType,
				boolean isColumnNameDelimited) {
			this.column = column;
			this.javaProperty = javaProperty;
			this.jdbcType = jdbcType;
			this.isColumnNameDelimited = isColumnNameDelimited;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public String desc() {
			return this.getEscapedColumnName() + " DESC";
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public String asc() {
			return this.getEscapedColumnName() + " ASC";
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public static Column[] excludes(Column... excludes) {
			ArrayList<Column> columns = new ArrayList<>(Arrays.asList(Column.values()));
			if (excludes != null && excludes.length > 0) {
				columns.removeAll(new ArrayList<>(Arrays.asList(excludes)));
			}
			return columns.toArray(new Column[] {});
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public static Column[] all() {
			return Column.values();
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public String getEscapedColumnName() {
			if (this.isColumnNameDelimited) {
				return new StringBuilder().append(BEGINNING_DELIMITER).append(this.column)
						.append(ENDING_DELIMITER).toString();
			}
			else {
				return this.column;
			}
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table preorder
		 *
		 * @mbg.generated
		 */
		public String getAliasedEscapedColumnName() {
			return this.getEscapedColumnName();
		}

	}

}
