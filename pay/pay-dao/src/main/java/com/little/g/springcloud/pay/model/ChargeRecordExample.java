package com.little.g.springcloud.pay.model;

import java.util.ArrayList;
import java.util.List;

public class ChargeRecordExample {

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public ChargeRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public ChargeRecordExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public ChargeRecordExample orderBy(String... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        ChargeRecordExample example = new ChargeRecordExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public ChargeRecordExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public ChargeRecordExample when(boolean condition, IExampleWhen then,
                                    IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2,
                                    String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException(
                        "Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTranNumIsNull() {
            addCriterion("tran_num is null");
            return (Criteria) this;
        }

        public Criteria andTranNumIsNotNull() {
            addCriterion("tran_num is not null");
            return (Criteria) this;
        }

        public Criteria andTranNumEqualTo(String value) {
            addCriterion("tran_num =", value, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("tran_num = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTranNumNotEqualTo(String value) {
            addCriterion("tran_num <>", value, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("tran_num <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTranNumGreaterThan(String value) {
            addCriterion("tran_num >", value, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("tran_num > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTranNumGreaterThanOrEqualTo(String value) {
            addCriterion("tran_num >=", value, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumGreaterThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("tran_num >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTranNumLessThan(String value) {
            addCriterion("tran_num <", value, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("tran_num < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTranNumLessThanOrEqualTo(String value) {
            addCriterion("tran_num <=", value, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("tran_num <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTranNumLike(String value) {
            addCriterion("tran_num like", value, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumNotLike(String value) {
            addCriterion("tran_num not like", value, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumIn(List<String> values) {
            addCriterion("tran_num in", values, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumNotIn(List<String> values) {
            addCriterion("tran_num not in", values, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumBetween(String value1, String value2) {
            addCriterion("tran_num between", value1, value2, "tranNum");
            return (Criteria) this;
        }

        public Criteria andTranNumNotBetween(String value1, String value2) {
            addCriterion("tran_num not between", value1, value2, "tranNum");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("`uid` is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("`uid` is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("`uid` =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`uid` = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("`uid` <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`uid` <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("`uid` >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`uid` > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("`uid` >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`uid` >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("`uid` <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`uid` < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("`uid` <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`uid` <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("`uid` in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("`uid` not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("`uid` between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("`uid` not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNull() {
            addCriterion("money is null");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNotNull() {
            addCriterion("money is not null");
            return (Criteria) this;
        }

        public Criteria andMoneyEqualTo(Long value) {
            addCriterion("money =", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("money = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoneyNotEqualTo(Long value) {
            addCriterion("money <>", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("money <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThan(Long value) {
            addCriterion("money >", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("money > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThanOrEqualTo(Long value) {
            addCriterion("money >=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("money >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoneyLessThan(Long value) {
            addCriterion("money <", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("money < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoneyLessThanOrEqualTo(Long value) {
            addCriterion("money <=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("money <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMoneyIn(List<Long> values) {
            addCriterion("money in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotIn(List<Long> values) {
            addCriterion("money not in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyBetween(Long value1, Long value2) {
            addCriterion("money between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotBetween(Long value1, Long value2) {
            addCriterion("money not between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`status` = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`status` <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`status` > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`status` >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`status` < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("`status` <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("description = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("description <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("description > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualToColumn(
                ChargeRecord.Column column) {
            addCriterion(new StringBuilder("description >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("description < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualToColumn(
                ChargeRecord.Column column) {
            addCriterion(new StringBuilder("description <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andPayTypeIsNull() {
            addCriterion("pay_type is null");
            return (Criteria) this;
        }

        public Criteria andPayTypeIsNotNull() {
            addCriterion("pay_type is not null");
            return (Criteria) this;
        }

        public Criteria andPayTypeEqualTo(String value) {
            addCriterion("pay_type =", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("pay_type = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeNotEqualTo(String value) {
            addCriterion("pay_type <>", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("pay_type <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThan(String value) {
            addCriterion("pay_type >", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("pay_type > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThanOrEqualTo(String value) {
            addCriterion("pay_type >=", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("pay_type >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThan(String value) {
            addCriterion("pay_type <", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("pay_type < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThanOrEqualTo(String value) {
            addCriterion("pay_type <=", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("pay_type <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeLike(String value) {
            addCriterion("pay_type like", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotLike(String value) {
            addCriterion("pay_type not like", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeIn(List<String> values) {
            addCriterion("pay_type in", values, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotIn(List<String> values) {
            addCriterion("pay_type not in", values, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeBetween(String value1, String value2) {
            addCriterion("pay_type between", value1, value2, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotBetween(String value1, String value2) {
            addCriterion("pay_type not between", value1, value2, "payType");
            return (Criteria) this;
        }

        public Criteria andPreorderNoIsNull() {
            addCriterion("preorder_no is null");
            return (Criteria) this;
        }

        public Criteria andPreorderNoIsNotNull() {
            addCriterion("preorder_no is not null");
            return (Criteria) this;
        }

        public Criteria andPreorderNoEqualTo(String value) {
            addCriterion("preorder_no =", value, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("preorder_no = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPreorderNoNotEqualTo(String value) {
            addCriterion("preorder_no <>", value, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("preorder_no <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPreorderNoGreaterThan(String value) {
            addCriterion("preorder_no >", value, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("preorder_no > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPreorderNoGreaterThanOrEqualTo(String value) {
            addCriterion("preorder_no >=", value, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoGreaterThanOrEqualToColumn(
                ChargeRecord.Column column) {
            addCriterion(new StringBuilder("preorder_no >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPreorderNoLessThan(String value) {
            addCriterion("preorder_no <", value, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("preorder_no < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPreorderNoLessThanOrEqualTo(String value) {
            addCriterion("preorder_no <=", value, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("preorder_no <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPreorderNoLike(String value) {
            addCriterion("preorder_no like", value, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoNotLike(String value) {
            addCriterion("preorder_no not like", value, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoIn(List<String> values) {
            addCriterion("preorder_no in", values, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoNotIn(List<String> values) {
            addCriterion("preorder_no not in", values, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoBetween(String value1, String value2) {
            addCriterion("preorder_no between", value1, value2, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andPreorderNoNotBetween(String value1, String value2) {
            addCriterion("preorder_no not between", value1, value2, "preorderNo");
            return (Criteria) this;
        }

        public Criteria andMchIdIsNull() {
            addCriterion("mch_id is null");
            return (Criteria) this;
        }

        public Criteria andMchIdIsNotNull() {
            addCriterion("mch_id is not null");
            return (Criteria) this;
        }

        public Criteria andMchIdEqualTo(String value) {
            addCriterion("mch_id =", value, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("mch_id = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMchIdNotEqualTo(String value) {
            addCriterion("mch_id <>", value, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("mch_id <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMchIdGreaterThan(String value) {
            addCriterion("mch_id >", value, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("mch_id > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMchIdGreaterThanOrEqualTo(String value) {
            addCriterion("mch_id >=", value, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdGreaterThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("mch_id >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMchIdLessThan(String value) {
            addCriterion("mch_id <", value, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("mch_id < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMchIdLessThanOrEqualTo(String value) {
            addCriterion("mch_id <=", value, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("mch_id <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMchIdLike(String value) {
            addCriterion("mch_id like", value, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdNotLike(String value) {
            addCriterion("mch_id not like", value, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdIn(List<String> values) {
            addCriterion("mch_id in", values, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdNotIn(List<String> values) {
            addCriterion("mch_id not in", values, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdBetween(String value1, String value2) {
            addCriterion("mch_id between", value1, value2, "mchId");
            return (Criteria) this;
        }

        public Criteria andMchIdNotBetween(String value1, String value2) {
            addCriterion("mch_id not between", value1, value2, "mchId");
            return (Criteria) this;
        }

        public Criteria andOutTranNumIsNull() {
            addCriterion("out_tran_num is null");
            return (Criteria) this;
        }

        public Criteria andOutTranNumIsNotNull() {
            addCriterion("out_tran_num is not null");
            return (Criteria) this;
        }

        public Criteria andOutTranNumEqualTo(String value) {
            addCriterion("out_tran_num =", value, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("out_tran_num = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutTranNumNotEqualTo(String value) {
            addCriterion("out_tran_num <>", value, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("out_tran_num <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutTranNumGreaterThan(String value) {
            addCriterion("out_tran_num >", value, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("out_tran_num > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutTranNumGreaterThanOrEqualTo(String value) {
            addCriterion("out_tran_num >=", value, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumGreaterThanOrEqualToColumn(
                ChargeRecord.Column column) {
            addCriterion(new StringBuilder("out_tran_num >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutTranNumLessThan(String value) {
            addCriterion("out_tran_num <", value, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("out_tran_num < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutTranNumLessThanOrEqualTo(String value) {
            addCriterion("out_tran_num <=", value, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("out_tran_num <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutTranNumLike(String value) {
            addCriterion("out_tran_num like", value, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumNotLike(String value) {
            addCriterion("out_tran_num not like", value, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumIn(List<String> values) {
            addCriterion("out_tran_num in", values, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumNotIn(List<String> values) {
            addCriterion("out_tran_num not in", values, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumBetween(String value1, String value2) {
            addCriterion("out_tran_num between", value1, value2, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andOutTranNumNotBetween(String value1, String value2) {
            addCriterion("out_tran_num not between", value1, value2, "outTranNum");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Long value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("create_time = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Long value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("create_time <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Long value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("create_time > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualToColumn(
                ChargeRecord.Column column) {
            addCriterion(new StringBuilder("create_time >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Long value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("create_time < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Long value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("create_time <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Long> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Long> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Long value1, Long value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Long value1, Long value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Long value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("update_time = ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Long value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("update_time <> ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Long value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("update_time > ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(
                ChargeRecord.Column column) {
            addCriterion(new StringBuilder("update_time >= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Long value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("update_time < ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Long value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualToColumn(ChargeRecord.Column column) {
            addCriterion(new StringBuilder("update_time <= ")
                    .append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Long> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Long> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Long value1, Long value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Long value1, Long value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table charge_record
	 *
	 * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        /**
         * This field was generated by MyBatis Generator. This field corresponds to the
         * database table charge_record
         *
         * @mbg.generated
         */
        private ChargeRecordExample example;

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the
         * database table charge_record
         *
         * @mbg.generated
         */
        protected Criteria(ChargeRecordExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the
         * database table charge_record
         *
         * @mbg.generated
         */
        public ChargeRecordExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the
         * database table charge_record
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the
         * database table charge_record
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the
         * database table charge_record
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then,
                             ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {

            /**
             * This method was generated by MyBatis Generator. This method corresponds to
             * the database table charge_record
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);

		}

	}

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the
     * database table charge_record
     *
     * @mbg.generated
     */
    public static class Criterion {

        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue,
                            String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }

    public interface ICriteriaWhen {

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the
         * database table charge_record
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);

    }

    public interface IExampleWhen {

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the
         * database table charge_record
         *
         * @mbg.generated
         */
        void example(com.little.g.springcloud.pay.model.ChargeRecordExample example);

    }

}
