package com.little.g.springcloud.thirdpay.model;

import java.util.ArrayList;
import java.util.List;

public class PayChannelExample {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public PayChannelExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public PayChannelExample orderBy(String orderByClause) {
		this.setOrderByClause(orderByClause);
		return this;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public PayChannelExample orderBy(String... orderByClauses) {
		StringBuffer sb = new StringBuffer();
		for (int i = 0; i < orderByClauses.length; i++) {
			sb.append(orderByClauses[i]);
			if (i < orderByClauses.length - 1) {
				sb.append(" , ");
			}
		}
		this.setOrderByClause(sb.toString());
		return this;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria(this);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public static Criteria newAndCreateCriteria() {
		PayChannelExample example = new PayChannelExample();
		return example.createCriteria();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public PayChannelExample when(boolean condition, IExampleWhen then) {
		if (condition) {
			then.example(this);
		}
		return this;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public PayChannelExample when(boolean condition, IExampleWhen then,
			IExampleWhen otherwise) {
		if (condition) {
			then.example(this);
		}
		else {
			otherwise.example(this);
		}
		return this;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {

		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2,
				String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException(
						"Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName())
					.toString());
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("`name` is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("`name` is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("`name` =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`name` = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("`name` <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`name` <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("`name` >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`name` > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("`name` >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`name` >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("`name` <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`name` < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("`name` <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`name` <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("`name` like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("`name` not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("`name` in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("`name` not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("`name` between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("`name` not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andCodeIsNull() {
			addCriterion("code is null");
			return (Criteria) this;
		}

		public Criteria andCodeIsNotNull() {
			addCriterion("code is not null");
			return (Criteria) this;
		}

		public Criteria andCodeEqualTo(String value) {
			addCriterion("code =", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("code = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCodeNotEqualTo(String value) {
			addCriterion("code <>", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("code <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThan(String value) {
			addCriterion("code >", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("code > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThanOrEqualTo(String value) {
			addCriterion("code >=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("code >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCodeLessThan(String value) {
			addCriterion("code <", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("code < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCodeLessThanOrEqualTo(String value) {
			addCriterion("code <=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("code <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andCodeLike(String value) {
			addCriterion("code like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotLike(String value) {
			addCriterion("code not like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeIn(List<String> values) {
			addCriterion("code in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotIn(List<String> values) {
			addCriterion("code not in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeBetween(String value1, String value2) {
			addCriterion("code between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotBetween(String value1, String value2) {
			addCriterion("code not between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andConfigVersionIsNull() {
			addCriterion("config_version is null");
			return (Criteria) this;
		}

		public Criteria andConfigVersionIsNotNull() {
			addCriterion("config_version is not null");
			return (Criteria) this;
		}

		public Criteria andConfigVersionEqualTo(String value) {
			addCriterion("config_version =", value, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("config_version = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andConfigVersionNotEqualTo(String value) {
			addCriterion("config_version <>", value, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionNotEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("config_version <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andConfigVersionGreaterThan(String value) {
			addCriterion("config_version >", value, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionGreaterThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("config_version > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andConfigVersionGreaterThanOrEqualTo(String value) {
			addCriterion("config_version >=", value, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionGreaterThanOrEqualToColumn(
				PayChannel.Column column) {
			addCriterion(new StringBuilder("config_version >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andConfigVersionLessThan(String value) {
			addCriterion("config_version <", value, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionLessThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("config_version < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andConfigVersionLessThanOrEqualTo(String value) {
			addCriterion("config_version <=", value, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionLessThanOrEqualToColumn(
				PayChannel.Column column) {
			addCriterion(new StringBuilder("config_version <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andConfigVersionLike(String value) {
			addCriterion("config_version like", value, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionNotLike(String value) {
			addCriterion("config_version not like", value, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionIn(List<String> values) {
			addCriterion("config_version in", values, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionNotIn(List<String> values) {
			addCriterion("config_version not in", values, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionBetween(String value1, String value2) {
			addCriterion("config_version between", value1, value2, "configVersion");
			return (Criteria) this;
		}

		public Criteria andConfigVersionNotBetween(String value1, String value2) {
			addCriterion("config_version not between", value1, value2, "configVersion");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeIsNull() {
			addCriterion("max_pay_fee is null");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeIsNotNull() {
			addCriterion("max_pay_fee is not null");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeEqualTo(Long value) {
			addCriterion("max_pay_fee =", value, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("max_pay_fee = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeNotEqualTo(Long value) {
			addCriterion("max_pay_fee <>", value, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeNotEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("max_pay_fee <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeGreaterThan(Long value) {
			addCriterion("max_pay_fee >", value, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeGreaterThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("max_pay_fee > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeGreaterThanOrEqualTo(Long value) {
			addCriterion("max_pay_fee >=", value, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeGreaterThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("max_pay_fee >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeLessThan(Long value) {
			addCriterion("max_pay_fee <", value, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeLessThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("max_pay_fee < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeLessThanOrEqualTo(Long value) {
			addCriterion("max_pay_fee <=", value, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeLessThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("max_pay_fee <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeIn(List<Long> values) {
			addCriterion("max_pay_fee in", values, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeNotIn(List<Long> values) {
			addCriterion("max_pay_fee not in", values, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeBetween(Long value1, Long value2) {
			addCriterion("max_pay_fee between", value1, value2, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMaxPayFeeNotBetween(Long value1, Long value2) {
			addCriterion("max_pay_fee not between", value1, value2, "maxPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeIsNull() {
			addCriterion("min_pay_fee is null");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeIsNotNull() {
			addCriterion("min_pay_fee is not null");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeEqualTo(Long value) {
			addCriterion("min_pay_fee =", value, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("min_pay_fee = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMinPayFeeNotEqualTo(Long value) {
			addCriterion("min_pay_fee <>", value, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeNotEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("min_pay_fee <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMinPayFeeGreaterThan(Long value) {
			addCriterion("min_pay_fee >", value, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeGreaterThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("min_pay_fee > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMinPayFeeGreaterThanOrEqualTo(Long value) {
			addCriterion("min_pay_fee >=", value, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeGreaterThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("min_pay_fee >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMinPayFeeLessThan(Long value) {
			addCriterion("min_pay_fee <", value, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeLessThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("min_pay_fee < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMinPayFeeLessThanOrEqualTo(Long value) {
			addCriterion("min_pay_fee <=", value, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeLessThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("min_pay_fee <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMinPayFeeIn(List<Long> values) {
			addCriterion("min_pay_fee in", values, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeNotIn(List<Long> values) {
			addCriterion("min_pay_fee not in", values, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeBetween(Long value1, Long value2) {
			addCriterion("min_pay_fee between", value1, value2, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andMinPayFeeNotBetween(Long value1, Long value2) {
			addCriterion("min_pay_fee not between", value1, value2, "minPayFee");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("`status` is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("`status` is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Byte value) {
			addCriterion("`status` =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`status` = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Byte value) {
			addCriterion("`status` <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`status` <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Byte value) {
			addCriterion("`status` >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`status` > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
			addCriterion("`status` >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`status` >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Byte value) {
			addCriterion("`status` <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`status` < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Byte value) {
			addCriterion("`status` <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("`status` <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Byte> values) {
			addCriterion("`status` in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Byte> values) {
			addCriterion("`status` not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Byte value1, Byte value2) {
			addCriterion("`status` between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Byte value1, Byte value2) {
			addCriterion("`status` not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andMemoIsNull() {
			addCriterion("memo is null");
			return (Criteria) this;
		}

		public Criteria andMemoIsNotNull() {
			addCriterion("memo is not null");
			return (Criteria) this;
		}

		public Criteria andMemoEqualTo(String value) {
			addCriterion("memo =", value, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("memo = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMemoNotEqualTo(String value) {
			addCriterion("memo <>", value, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoNotEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("memo <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMemoGreaterThan(String value) {
			addCriterion("memo >", value, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoGreaterThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("memo > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMemoGreaterThanOrEqualTo(String value) {
			addCriterion("memo >=", value, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoGreaterThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("memo >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMemoLessThan(String value) {
			addCriterion("memo <", value, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoLessThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("memo < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMemoLessThanOrEqualTo(String value) {
			addCriterion("memo <=", value, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoLessThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("memo <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andMemoLike(String value) {
			addCriterion("memo like", value, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoNotLike(String value) {
			addCriterion("memo not like", value, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoIn(List<String> values) {
			addCriterion("memo in", values, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoNotIn(List<String> values) {
			addCriterion("memo not in", values, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoBetween(String value1, String value2) {
			addCriterion("memo between", value1, value2, "memo");
			return (Criteria) this;
		}

		public Criteria andMemoNotBetween(String value1, String value2) {
			addCriterion("memo not between", value1, value2, "memo");
			return (Criteria) this;
		}

		public Criteria andThumbnailIsNull() {
			addCriterion("thumbnail is null");
			return (Criteria) this;
		}

		public Criteria andThumbnailIsNotNull() {
			addCriterion("thumbnail is not null");
			return (Criteria) this;
		}

		public Criteria andThumbnailEqualTo(String value) {
			addCriterion("thumbnail =", value, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("thumbnail = ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andThumbnailNotEqualTo(String value) {
			addCriterion("thumbnail <>", value, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailNotEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("thumbnail <> ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andThumbnailGreaterThan(String value) {
			addCriterion("thumbnail >", value, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailGreaterThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("thumbnail > ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andThumbnailGreaterThanOrEqualTo(String value) {
			addCriterion("thumbnail >=", value, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailGreaterThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("thumbnail >= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andThumbnailLessThan(String value) {
			addCriterion("thumbnail <", value, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailLessThanColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("thumbnail < ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andThumbnailLessThanOrEqualTo(String value) {
			addCriterion("thumbnail <=", value, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailLessThanOrEqualToColumn(PayChannel.Column column) {
			addCriterion(new StringBuilder("thumbnail <= ")
					.append(column.getEscapedColumnName()).toString());
			return (Criteria) this;
		}

		public Criteria andThumbnailLike(String value) {
			addCriterion("thumbnail like", value, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailNotLike(String value) {
			addCriterion("thumbnail not like", value, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailIn(List<String> values) {
			addCriterion("thumbnail in", values, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailNotIn(List<String> values) {
			addCriterion("thumbnail not in", values, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailBetween(String value1, String value2) {
			addCriterion("thumbnail between", value1, value2, "thumbnail");
			return (Criteria) this;
		}

		public Criteria andThumbnailNotBetween(String value1, String value2) {
			addCriterion("thumbnail not between", value1, value2, "thumbnail");
			return (Criteria) this;
		}

	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated do_not_delete_during_merge
	 */
	public static class Criteria extends GeneratedCriteria {

		/**
		 * This field was generated by MyBatis Generator. This field corresponds to the
		 * database table pay_channel
		 *
		 * @mbg.generated
		 */
		private PayChannelExample example;

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table pay_channel
		 *
		 * @mbg.generated
		 */
		protected Criteria(PayChannelExample example) {
			super();
			this.example = example;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table pay_channel
		 *
		 * @mbg.generated
		 */
		public PayChannelExample example() {
			return this.example;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table pay_channel
		 *
		 * @mbg.generated
		 */
		@Deprecated
		public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
			if (ifAdd) {
				add.add(this);
			}
			return this;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table pay_channel
		 *
		 * @mbg.generated
		 */
		public Criteria when(boolean condition, ICriteriaWhen then) {
			if (condition) {
				then.criteria(this);
			}
			return this;
		}

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table pay_channel
		 *
		 * @mbg.generated
		 */
		public Criteria when(boolean condition, ICriteriaWhen then,
				ICriteriaWhen otherwise) {
			if (condition) {
				then.criteria(this);
			}
			else {
				otherwise.criteria(this);
			}
			return this;
		}

		@Deprecated
		public interface ICriteriaAdd {

			/**
			 * This method was generated by MyBatis Generator. This method corresponds to
			 * the database table pay_channel
			 *
			 * @mbg.generated
			 */
			Criteria add(Criteria add);

		}

	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table pay_channel
	 *
	 * @mbg.generated
	 */
	public static class Criterion {

		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			}
			else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}

	}

	public interface ICriteriaWhen {

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table pay_channel
		 *
		 * @mbg.generated
		 */
		void criteria(Criteria criteria);

	}

	public interface IExampleWhen {

		/**
		 * This method was generated by MyBatis Generator. This method corresponds to the
		 * database table pay_channel
		 *
		 * @mbg.generated
		 */
		void example(com.little.g.springcloud.thirdpay.model.PayChannelExample example);

	}

}